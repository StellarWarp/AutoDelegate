Index: src/benchmark/auto_delegate_bench_mark.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include <benchmark/benchmark.h>\r\n#include <random>\r\n#include <functional>\r\n\r\n#include \"../reference_safe_delegate/reference_safe_delegate.h\"\r\n\r\n\r\nusing namespace auto_delegate;\r\n\r\nstruct type1\r\n{\r\n    int value;\r\n};\r\n\r\n#define ARG_LIST type1 t1, type1& t2, const type1 t1c, const type1& t2c\r\n#define ARG_LIST_FORWARD t1, std::ref(t2), std::forward<const type1>(t1c), std::cref(t2c)\r\n\r\nstruct A\r\n{\r\n    multicast_delegate<void(ARG_LIST)> event_default;\r\n    multicast_auto_delegate<void(ARG_LIST)> event;\r\n    multicast_auto_delegate<int(ARG_LIST)> event_ret;\r\n    multicast_auto_delegate_extern_ref<void(ARG_LIST)> event_ref;\r\n};\r\n\r\ntemplate<auto I>\r\nstruct B : public generic_ref_reflector\r\n{\r\n    int value;\r\n\r\n    static const uint64_t test_scale = 1 << 4;\r\n\r\n    B() = default;\r\n\r\n    void work_load()\r\n    {\r\n//        benchmark::DoNotOptimize(I);\r\n        value += I;\r\n    }\r\n\r\n    void action(ARG_LIST) noexcept\r\n    {\r\n        work_load();\r\n    }\r\n\r\n    int function(ARG_LIST) noexcept\r\n    {\r\n        work_load();\r\n        return value;\r\n    }\r\n\r\n    virtual void virtual_action(ARG_LIST) noexcept\r\n    {\r\n        work_load();\r\n    }\r\n\r\n    virtual int virtual_function(ARG_LIST) noexcept\r\n    {\r\n        work_load();\r\n        return value;\r\n    }\r\n\r\n    int operator()(ARG_LIST) noexcept\r\n    {\r\n        work_load();\r\n        return value;\r\n\r\n    }\r\n};\r\n\r\nstruct C\r\n{\r\n    std::string name;\r\n\r\n    C() = default;\r\n\r\n    C(std::string name) : name(name) {}\r\n\r\n    void action(ARG_LIST) noexcept\r\n    {\r\n\r\n    }\r\n\r\n    int function(ARG_LIST) noexcept\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    virtual void virtual_action(ARG_LIST) noexcept\r\n    {\r\n    }\r\n\r\n\r\n    virtual int virtual_function(ARG_LIST) noexcept\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    static int static_function(ARG_LIST) noexcept\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    int operator()(ARG_LIST) noexcept\r\n    {\r\n        return 0;\r\n    }\r\n};\r\n\r\n#ifdef NDEBUG\r\nstatic constexpr size_t class_count = 1 << 5;\r\n#else\r\nstatic constexpr size_t class_count = 1 << 2;\r\n#endif\r\nstatic constexpr size_t object_count = 1 << 12;\r\nstatic constexpr size_t per_class_count = object_count / class_count;\r\n\r\nconst auto min_warm_up = 1 << 10;\r\n#ifdef NDEBUG\r\nconst uint64_t invoke_count = 1 << 12;\r\n#else\r\nconst uint64_t invoke_count = 1 << 2;\r\n#endif\r\n\r\n#define BENCHMARK_ARGS ->Iterations(invoke_count)->MeasureProcessCPUTime()->Unit(benchmark::kMillisecond)->MinWarmUpTime(min_warm_up)\r\n\r\n\r\ntemplate<auto>\r\nstruct index_tag {};\r\n\r\nstruct ObjectArray\r\n{\r\n    std::vector<void*> raw_mem;\r\n\r\n    using typed_object_list = decltype([]\r\n    {\r\n        return []<size_t...I>(std::index_sequence<I...>)\r\n        {\r\n            return std::tuple<B<I>* ...>{};\r\n        }(std::make_index_sequence<class_count>{});\r\n    }());\r\n\r\n    std::vector<typed_object_list> objects;\r\n\r\n\r\n    ObjectArray()\r\n    {\r\n        raw_mem.reserve(object_count);\r\n        std::random_device rd;\r\n        std::mt19937 eng(rd());\r\n        objects.reserve(per_class_count);\r\n        for (size_t i = 0; i < per_class_count; ++i)\r\n        {\r\n            objects.emplace_back([&]<size_t...I>(std::index_sequence<I...>)\r\n                                 {\r\n                                     auto new_object = [&]<size_t Index>(index_tag<Index>)\r\n                                     {\r\n                                         size_t mem_size = std::uniform_int_distribution<size_t>(1024, 2048)(eng);\r\n#ifdef _MSC_VER\r\n                                         void* mem = _aligned_malloc(sizeof(B<Index>), alignof(B<Index>));\r\n#else\r\n                                         void* mem = std::aligned_alloc(alignof(B<Index>),sizeof(B<Index>));\r\n#endif\r\n                                         if (!mem) throw std::bad_alloc();\r\n                                         raw_mem.push_back(mem);\r\n                                         B<Index>* b = new(mem) B<Index>();\r\n                                         return b;\r\n                                     };\r\n                                     return std::tuple{new_object(index_tag<I>{})...};\r\n                                 }(std::make_index_sequence<class_count>{}));\r\n        }\r\n    }\r\n\r\n    ~ObjectArray()\r\n    {\r\n        for (auto ptr: raw_mem)\r\n        {\r\n#ifdef _MSC_VER\r\n            _aligned_free(ptr);\r\n#else\r\n            std::free(ptr);\r\n#endif\r\n        }\r\n    }\r\n\r\n    static auto& Array()\r\n    {\r\n        static ObjectArray a;\r\n        return a.objects;\r\n    }\r\n\r\n};\r\n\r\n#define INVOKE_PARAMS PARAMS.v1, PARAMS.v2, PARAMS.v1, PARAMS.v2\r\n\r\nstruct\r\n{\r\n    type1 v1{1};\r\n    type1 v2{2};\r\n    type1 v3{3};\r\n    type1 v4{4};\r\n} PARAMS;\r\n\r\n\r\ntemplate<typename OArr = ObjectArray>\r\nvoid ForEachObject(auto&& func)\r\n{\r\n    auto& objects = OArr::Array();\r\n    for (auto& object_tuple: objects)\r\n    {\r\n        [&]<size_t...I>(std::index_sequence<I...>)\r\n        {\r\n            auto lambda = [&]<size_t Index>(index_tag<Index>)\r\n            {\r\n                auto ptr = std::get<Index>(object_tuple);\r\n                func(ptr, index_tag<Index>());\r\n            };\r\n            (lambda(index_tag<I>()), ...);\r\n        }(std::make_index_sequence<class_count>{});\r\n    }\r\n}\r\n\r\n\r\ntemplate<typename DelegateType, typename OArr = ObjectArray>\r\nvoid TestTemplate(benchmark::State& state, auto&& bind, auto&& invoke)\r\n{\r\n    DelegateType d{};\r\n    if constexpr (requires { typename DelegateType::delegate_handle_t; })\r\n    {\r\n        if constexpr (not std::is_void_v<typename DelegateType::delegate_handle_t>)\r\n        {\r\n            std::vector<typename DelegateType::delegate_handle_t> handles;\r\n            handles.reserve(object_count);\r\n\r\n            ForEachObject<OArr>([&](auto&& ptr, auto)\r\n                                {\r\n                                    handles.emplace_back(bind(d, ptr));\r\n                                });\r\n\r\n            for (auto _: state)\r\n            {\r\n                invoke(d);\r\n            }\r\n        } else\r\n        {\r\n            ForEachObject<OArr>([&](auto&& ptr, auto)\r\n                                {\r\n                                    bind(d, ptr);\r\n                                });\r\n\r\n            for (auto _: state)\r\n            {\r\n                invoke(d);\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        ForEachObject<OArr>([&](auto&& ptr, auto)\r\n                            {\r\n                                bind(d, ptr);\r\n                            });\r\n\r\n        for (auto _: state)\r\n        {\r\n            invoke(d);\r\n        }\r\n    }\r\n}\r\n\r\ninline std::vector<int> int_values(object_count, 0);\r\n\r\nstatic void BM_WorkLoad(benchmark::State& state)\r\n{\r\n    for (auto _: state)\r\n    {\r\n        ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                      {\r\n                          int_values[I] += I;\r\n                      });\r\n    }\r\n}\r\n\r\nBENCHMARK(BM_WorkLoad)BENCHMARK_ARGS;\r\n\r\nstatic void BM_Inline_Function(benchmark::State& state)\r\n{\r\n    for (auto _: state)\r\n    {\r\n        ForEachObject([&](auto&& o, auto)\r\n                      {\r\n                          o->function(INVOKE_PARAMS);\r\n                      });\r\n    }\r\n}\r\n\r\nBENCHMARK(BM_Inline_Function)BENCHMARK_ARGS;\r\n\r\nstatic void BM_Direct_Virtual_Function(benchmark::State& state)\r\n{\r\n    for (auto _: state)\r\n    {\r\n        ForEachObject([&](auto&& o, auto)\r\n                      {\r\n                          o->virtual_function(INVOKE_PARAMS);\r\n                      });\r\n    }\r\n}\r\n//BENCHMARK(BM_Direct_Virtual_Function)BENCHMARK_ARGS;\r\n\r\n\r\n\r\nstatic void BM_Direct_FunctionPointer(benchmark::State& state)\r\n{\r\n\r\n    auto func_ptrs = []\r\n    {\r\n        return []<size_t...I>(std::index_sequence<I...>)\r\n        {\r\n            return std::tuple{&B<I>::function...};\r\n        }(std::make_index_sequence<class_count>{});\r\n    }();\r\n\r\n    benchmark::DoNotOptimize(func_ptrs);\r\n\r\n\r\n    for (auto _: state)\r\n    {\r\n        ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                      {\r\n                          auto func_ptr = std::get<I>(func_ptrs);\r\n                          (o->*func_ptr)(INVOKE_PARAMS);\r\n                      });\r\n    }\r\n}\r\nBENCHMARK(BM_Direct_FunctionPointer)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_FunctionPointer(benchmark::State& state)\r\n{\r\n    using func_t = decltype(&B<0>::function);\r\n    using pair_t = std::pair<B<0>*, func_t>;\r\n    std::vector<pair_t> funcs;\r\n    funcs.reserve(object_count);\r\n\r\n    ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                  {\r\n                      funcs.emplace_back(pair_t{\r\n                              (B<0>*) o,\r\n                              (func_t) &B<I>::function\r\n                      });\r\n                  });\r\n\r\n    for (auto& [o, func_ptr]: funcs)\r\n    {\r\n        benchmark::DoNotOptimize(func_ptr);\r\n    }\r\n\r\n    for (auto _: state)\r\n    {\r\n        for (auto& [o, func_ptr]: funcs)\r\n        {\r\n            (o->*func_ptr)(INVOKE_PARAMS);\r\n        }\r\n    }\r\n}\r\n\r\nBENCHMARK(BM_FunctionPointer)BENCHMARK_ARGS;\r\n\r\nstatic void BM_Lambda(benchmark::State& state)\r\n{\r\n    using func_t = int (*)(void*, ARG_LIST);\r\n    using pair_t = std::pair<B<0>*, func_t>;\r\n    std::vector<pair_t> funcs;\r\n    funcs.reserve(object_count);\r\n\r\n    ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                  {\r\n                      funcs.emplace_back(pair_t{\r\n                              (B<0>*) o,\r\n                              [](void* o, ARG_LIST) -> int\r\n                              {\r\n                                  return ((B<I>*) o)->function(INVOKE_PARAMS);\r\n                              }\r\n                      });\r\n                  });\r\n\r\n    for (auto& [o, func_ptr]: funcs)\r\n    {\r\n        benchmark::DoNotOptimize(func_ptr);\r\n    }\r\n\r\n    for (auto _: state)\r\n    {\r\n        for (auto& [o, func_ptr]: funcs)\r\n        {\r\n            func_ptr(o, INVOKE_PARAMS);\r\n        }\r\n    }\r\n}\r\n// BENCHMARK(BM_Lambda)BENCHMARK_ARGS;\r\n\r\n\r\n\r\nstatic void BM_Virtual_FunctionPointer(benchmark::State& state)\r\n{\r\n    using func_t = decltype(&B<0>::virtual_function);\r\n    using pair_t = std::pair<B<0>*, func_t>;\r\n    std::vector<pair_t> funcs;\r\n    funcs.reserve(object_count);\r\n\r\n    ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                  {\r\n                      funcs.emplace_back(pair_t{\r\n                              (B<0>*) o,\r\n                              (func_t) &B<I>::virtual_function\r\n                      });\r\n                  });\r\n\r\n    for (auto _: state)\r\n    {\r\n        for (auto& [o, func_ptr]: funcs)\r\n        {\r\n            (o->*func_ptr)(INVOKE_PARAMS);\r\n        }\r\n    }\r\n}\r\n//BENCHMARK(BM_Virtual_FunctionPointer)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_StdFunction(benchmark::State& state)\r\n{\r\n    std::vector<std::function<void(ARG_LIST)>> funcs;\r\n    funcs.reserve(object_count);\r\n\r\n    ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                  {\r\n                      funcs.emplace_back([o](ARG_LIST)\r\n                                         {\r\n                                             o->function(ARG_LIST_FORWARD);\r\n                                         });\r\n                  });\r\n\r\n//    static_assert(sizeof(std::function<void(ARG_LIST)>) == 32);\r\n\r\n    for (auto _: state)\r\n    {\r\n        for (auto& f: funcs)\r\n        {\r\n            f(INVOKE_PARAMS);\r\n        }\r\n    }\r\n}\r\n\r\nBENCHMARK(BM_StdFunction)BENCHMARK_ARGS;\r\n\r\nstatic void BM_MyFunction(benchmark::State& state)\r\n{\r\n    std::vector<function<void(ARG_LIST)>> funcs;\r\n    funcs.reserve(object_count);\r\n\r\n    ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                  {\r\n                      funcs.emplace_back([o](ARG_LIST)\r\n                                         {\r\n                                             o->function(ARG_LIST_FORWARD);\r\n                                         });\r\n                  });\r\n\r\n    for (auto _: state)\r\n    {\r\n        for (auto& f: funcs)\r\n        {\r\n            f(INVOKE_PARAMS);\r\n        }\r\n    }\r\n}\r\n\r\nBENCHMARK(BM_MyFunction)BENCHMARK_ARGS;\r\n\r\nstatic void BM_FunctionV2(benchmark::State& state)\r\n{\r\n    std::vector<function_v2::function<void(ARG_LIST)>> funcs;\r\n    funcs.reserve(object_count);\r\n\r\n    ForEachObject([&]<size_t I>(auto&& o, index_tag<I>)\r\n                  {\r\n                      funcs.emplace_back([o](ARG_LIST)\r\n                                         {\r\n                                             o->function(ARG_LIST_FORWARD);\r\n                                         });\r\n                  });\r\n\r\n    for (auto _: state)\r\n    {\r\n        for (auto& f: funcs)\r\n        {\r\n            f(INVOKE_PARAMS);\r\n        }\r\n    }\r\n}\r\n\r\nBENCHMARK(BM_FunctionV2)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_DefaultMulticast_InvokeAction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_delegate<void(ARG_LIST)>>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::action>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.invoke(INVOKE_PARAMS);\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_DefaultMulticast_InvokeAction)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_DefaultMulticast_InvokeFunction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_delegate<int(ARG_LIST)>>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::function>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.for_each_invoke(INVOKE_PARAMS, [](auto&& res)\r\n                {\r\n\r\n                });\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_DefaultMulticast_InvokeFunction)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_MulticastFunc_InvokeAction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_function<void(ARG_LIST)>>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d += auto_ref_binder(ptr) | bind_memfn<&T::action>;\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.invoke(INVOKE_PARAMS);\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_MulticastFunc_InvokeAction)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_MulticastFunc_InvokeFunction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_function<int(ARG_LIST)>>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d += auto_ref_binder(ptr) | bind_memfn<&T::function>;\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.for_each_invoke(INVOKE_PARAMS, [](auto&& res)\r\n                {\r\n\r\n                });\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_MulticastFunc_InvokeFunction)BENCHMARK_ARGS;\r\n\r\nstatic void BM_DefaultMulticast_InvokeVirtualAction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_delegate<void(ARG_LIST)>>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::virtual_action>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.invoke(INVOKE_PARAMS);\r\n            }\r\n    );\r\n}\r\n//BENCHMARK(BM_DefaultMulticast_InvokeVirtualAction)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_DefaultMulticast_InvokeVirtualFunction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_delegate<int(ARG_LIST)>>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::virtual_function>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.for_each_invoke(INVOKE_PARAMS, [](auto&& res)\r\n                {\r\n\r\n                });\r\n            }\r\n    );\r\n}\r\n//BENCHMARK(BM_DefaultMulticast_InvokeVirtualFunction)BENCHMARK_ARGS;\r\n\r\n\r\nstruct SharedObjectArray\r\n{\r\n    using typed_object_list = decltype([]\r\n    {\r\n        return []<size_t...I>(std::index_sequence<I...>)\r\n        {\r\n            return std::tuple<SharedPtr<B<I>> ...>{};\r\n        }(std::make_index_sequence<class_count>{});\r\n    }());\r\n\r\n    std::vector<typed_object_list> objects;\r\n\r\n\r\n    SharedObjectArray()\r\n    {\r\n        objects.reserve(per_class_count);\r\n        for (size_t i = 0; i < per_class_count; ++i)\r\n        {\r\n            objects.emplace_back([&]<size_t...I>(std::index_sequence<I...>)\r\n                                 {\r\n                                     auto new_object = [&]<size_t Index>(index_tag<Index>)\r\n                                     {\r\n                                         auto mem = new B<Index>();\r\n                                         return SharedPtr<B<Index>>(mem);\r\n                                     };\r\n                                     return std::tuple{new_object(index_tag<I>{})...};\r\n                                 }(std::make_index_sequence<class_count>{}));\r\n        }\r\n    }\r\n\r\n\r\n    static auto& Array()\r\n    {\r\n        static SharedObjectArray sa;\r\n        return sa.objects;\r\n    }\r\n\r\n};\r\n\r\n\r\nvoid ForEachWeakObject(auto&& func)\r\n{\r\n    auto& objects = SharedObjectArray::Array();\r\n\r\n    for (auto& object_tuple: objects)\r\n    {\r\n        [&]<size_t...I>(std::index_sequence<I...>)\r\n        {\r\n            auto lambda = [&]<size_t Index>(index_tag<Index>)\r\n            {\r\n                auto ptr = std::get<Index>(object_tuple);\r\n                func(ptr, index_tag<Index>());\r\n            };\r\n            (lambda(index_tag<I>()), ...);\r\n        }(std::make_index_sequence<class_count>{});\r\n    }\r\n}\r\n\r\nstatic void BM_LightWeakMulticast_InvokeAction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_light_weak_delegate<void(ARG_LIST)>, SharedObjectArray>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::action>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.invoke(INVOKE_PARAMS);\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_LightWeakMulticast_InvokeAction)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_LightWeakMulticast_InvokeFunction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_light_weak_delegate<int(ARG_LIST)>, SharedObjectArray>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::function>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.for_each_invoke(INVOKE_PARAMS, [](auto&& res)\r\n                {\r\n                });\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_LightWeakMulticast_InvokeFunction)BENCHMARK_ARGS;\r\n\r\n\r\nstruct StdSharedObjectArray\r\n{\r\n    using typed_object_list = decltype([]\r\n    {\r\n        return []<size_t...I>(std::index_sequence<I...>)\r\n        {\r\n            return std::tuple<std::shared_ptr<B<I>> ...>{};\r\n        }(std::make_index_sequence<class_count>{});\r\n    }());\r\n\r\n    std::vector<typed_object_list> objects;\r\n\r\n\r\n    StdSharedObjectArray()\r\n    {\r\n        objects.reserve(per_class_count);\r\n        for (size_t i = 0; i < per_class_count; ++i)\r\n        {\r\n            objects.emplace_back([&]<size_t...I>(std::index_sequence<I...>)\r\n                                 {\r\n                                     auto new_object = [&]<size_t Index>(index_tag<Index>)\r\n                                     {\r\n                                         auto mem = new B<Index>();\r\n                                         return std::shared_ptr<B<Index>>(mem);\r\n                                     };\r\n                                     return std::tuple{new_object(index_tag<I>{})...};\r\n                                 }(std::make_index_sequence<class_count>{}));\r\n        }\r\n    }\r\n\r\n\r\n    static auto& Array()\r\n    {\r\n        static StdSharedObjectArray ssa;\r\n        return ssa.objects;\r\n    }\r\n\r\n};\r\n\r\nstatic void BM_WeakMulticast_InvokeAction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_weak_delegate<void(ARG_LIST)>, StdSharedObjectArray>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::action>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.invoke(INVOKE_PARAMS);\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_WeakMulticast_InvokeAction)BENCHMARK_ARGS;\r\n\r\n\r\nstatic void BM_WeakMulticast_InvokeFunction(benchmark::State& state)\r\n{\r\n    TestTemplate<multicast_weak_delegate<int(ARG_LIST)>, StdSharedObjectArray>(\r\n            state,\r\n            [](auto&& d, auto&& ptr)\r\n            {\r\n                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n                return d.template bind<&T::function>(ptr);\r\n            },\r\n            [](auto&& d)\r\n            {\r\n                d.for_each_invoke(INVOKE_PARAMS, [](auto&& res)\r\n                {\r\n                });\r\n            }\r\n    );\r\n}\r\n\r\n//BENCHMARK(BM_WeakMulticast_InvokeFunction)BENCHMARK_ARGS;\r\n\r\n//\r\n//static void BM_WeakMulticast_InvokeVirtualAction(benchmark::State& state)\r\n//{\r\n//    BM_WeakMulticast<multicast_weak_delegate<void(ARG_LIST)>>(\r\n//            state,\r\n//            [](auto&& d, auto&& ptr)\r\n//            {\r\n//                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n//                return d.template bind<&T::virtual_action>(ptr);\r\n//            },\r\n//            [](auto&& d)\r\n//            {\r\n//                d.invoke(INVOKE_PARAMS);\r\n//            }\r\n//    );\r\n//}\r\n//\r\n//static void BM_WeakMulticast_VirtualFunction(benchmark::State& state)\r\n//{\r\n//    BM_WeakMulticast<multicast_weak_delegate<int(ARG_LIST)>>(\r\n//            state,\r\n//            [](auto&& d, auto&& ptr)\r\n//            {\r\n//                using T = std::pointer_traits<std::decay_t<decltype(ptr)>>::element_type;\r\n//                return d.template bind<&T::virtual_function>(ptr);\r\n//            },\r\n//            [](auto&& d)\r\n//            {\r\n//                d.invoke(INVOKE_PARAMS, [](auto&& iterable)\r\n//                {\r\n//                    for (auto res: iterable)\r\n//                    {\r\n//                    }\r\n//                });\r\n//            }\r\n//    );\r\n//}\r\n\r\n//BENCHMARK(BM_WeakMulticast_InvokeAction)\r\n//        ->MinWarmUpTime(min_warm_up)\r\n//        ->Iterations(invoke_count);\r\n//BENCHMARK(BM_WeakMulticast_InvokeFunction)\r\n//        ->MinWarmUpTime(min_warm_up)\r\n//        ->Iterations(invoke_count);\r\n//BENCHMARK(BM_WeakMulticast_InvokeVirtualAction)\r\n//        ->MinWarmUpTime(min_warm_up)\r\n//        ->Iterations(invoke_count);\r\n//BENCHMARK(BM_WeakMulticast_VirtualFunction)\r\n//        ->MinWarmUpTime(min_warm_up)\r\n//        ->Iterations(invoke_count);\r\n\r\n\r\n#undef ARG_LIST\r\n#undef ARG_LIST_FORWARD
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/benchmark/auto_delegate_bench_mark.cpp b/src/benchmark/auto_delegate_bench_mark.cpp
--- a/src/benchmark/auto_delegate_bench_mark.cpp	(revision aca3daab914712628bb76b68f6f09962dd91954d)
+++ b/src/benchmark/auto_delegate_bench_mark.cpp	(date 1727068448856)
@@ -112,7 +112,7 @@
 #else
 static constexpr size_t class_count = 1 << 2;
 #endif
-static constexpr size_t object_count = 1 << 12;
+static constexpr size_t object_count = 1 << 16;
 static constexpr size_t per_class_count = object_count / class_count;
 
 const auto min_warm_up = 1 << 10;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"CMakeRunConfigurationManager\">\r\n    <generated />\r\n  </component>\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" ENABLED=\"true\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1c50c572-0cf9-452a-9cdb-7cdf85a1e89f\" name=\"Changes\" comment=\"[features] adding for_each for multicast_delegate\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"CompDBLocalSettings\">\r\n    <option name=\"availableProjects\">\r\n      <map>\r\n        <entry>\r\n          <key>\r\n            <ExternalProjectPojo>\r\n              <option name=\"name\" value=\"AutoDelegate\" />\r\n              <option name=\"path\" value=\"$PROJECT_DIR$\" />\r\n            </ExternalProjectPojo>\r\n          </key>\r\n          <value>\r\n            <list>\r\n              <ExternalProjectPojo>\r\n                <option name=\"name\" value=\"AutoDelegate\" />\r\n                <option name=\"path\" value=\"$PROJECT_DIR$\" />\r\n              </ExternalProjectPojo>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"projectSyncType\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"RE_IMPORT\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n    <option name=\"ROOT_SYNC\" value=\"SYNC\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;StellarWarp&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/StellarWarp/AutoDelegate.git&quot;,\r\n    &quot;accountId&quot;: &quot;63bd8105-4134-44c9-a0ba-53c513065584&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/benchmark/auto_delegate_bench_mark.cpp\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/delegate/multicast_delegate.h\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/delegate/multicast_function.h\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/reference_safe_delegate/reference_safe_delegate.h\" root0=\"SKIP_INSPECTION\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/test/test_multicast_function.cpp\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProjectApplicationVersion\">\r\n    <option name=\"ide\" value=\"CLion\" />\r\n    <option name=\"majorVersion\" value=\"2024\" />\r\n    <option name=\"minorVersion\" value=\"1.5\" />\r\n    <option name=\"productBranch\" value=\"Classic\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2kizgbI6Wm4FmN9QF0q5RJWirF2\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;C/C++ File.test.cpp.executor&quot;: &quot;Run&quot;,\r\n    &quot;Custom Build Application.benchmark | debug.executor&quot;: &quot;Debug&quot;,\r\n    &quot;Custom Build Application.benchmark | release.executor&quot;: &quot;Run&quot;,\r\n    &quot;Custom Build Application.test | debug.executor&quot;: &quot;Debug&quot;,\r\n    &quot;Custom Build Application.test | release.executor&quot;: &quot;Run&quot;,\r\n    &quot;Custom Build Application.xmake | debug.executor&quot;: &quot;Run&quot;,\r\n    &quot;Custom Build Application.xmake | release.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.benchmark_display.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.gitsubtree_util.executor&quot;: &quot;Debug&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;cf.advertisement.text.has.clang-format&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.codeium.enabled&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Estelle/source/repos/AutoDelegate&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.general&quot;,\r\n    &quot;structure.view.defaults.are.configured&quot;: &quot;true&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Estelle\\source\\repos\\AutoDelegate\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Estelle\\source\\repos\\Delegate\\src\\benchmark\" />\r\n      <recent name=\"C:\\Users\\Estelle\\source\\repos\\Delegate\\src\\test\" />\r\n      <recent name=\"C:\\Users\\Estelle\\source\\repos\\Delegate\\src\\auto_reference\" />\r\n      <recent name=\"C:\\Users\\Estelle\\source\\repos\\Delegate\\src\" />\r\n      <recent name=\"C:\\Users\\Estelle\\source\\repos\\Delegate\\src\\delegate\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Custom Build Application.test | debug\">\r\n    <configuration name=\"benchmark | debug\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--benchmark_repetitions=10\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"AutoDelegate\" TARGET_NAME=\"xmake\" CONFIG_NAME=\"xmake\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/debug/DelegateBenchmark.exe\">\r\n      <envs>\r\n        <env name=\"CONSOLE_WIDTH\" value=\" 200\" />\r\n      </envs>\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting debug\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"benchmark | debug\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--benchmark_repetitions=10\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake\" CONFIG_NAME=\"xmake\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/debug/DelegateBenchmark.exe\">\r\n      <envs>\r\n        <env name=\"CONSOLE_WIDTH\" value=\" 200\" />\r\n      </envs>\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting debug\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"benchmark | debug\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--benchmark_repetitions=10\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake\" CONFIG_NAME=\"xmake\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/debug/DelegateBenchmark.exe\">\r\n      <envs>\r\n        <env name=\"CONSOLE_WIDTH\" value=\" 200\" />\r\n      </envs>\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting debug\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"benchmark | release\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--benchmark_repetitions=5\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"AutoDelegate\" TARGET_NAME=\"xmake\" CONFIG_NAME=\"xmake\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/release/DelegateBenchmark.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting release\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"benchmark | release\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--benchmark_repetitions=5\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake benchmark\" CONFIG_NAME=\"xmake benchmark\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/release/DelegateBenchmark.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting release\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"benchmark | release\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--benchmark_repetitions=5\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake benchmark\" CONFIG_NAME=\"xmake benchmark\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/release/DelegateBenchmark.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting release\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test | debug\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--gtest_break_on_failure\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"AutoDelegate\" TARGET_NAME=\"xmake\" CONFIG_NAME=\"xmake\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/debug/DelegateTest.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting debug\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test | debug\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--gtest_break_on_failure\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake test\" CONFIG_NAME=\"xmake test\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/debug/DelegateTest.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting debug\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test | debug\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--gtest_break_on_failure\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake test\" CONFIG_NAME=\"xmake test\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/debug/DelegateTest.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting debug\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test | release\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" PROGRAM_PARAMS=\"--gtest_break_on_failure\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"AutoDelegate\" TARGET_NAME=\"xmake\" CONFIG_NAME=\"xmake\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/release/DelegateTest.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting release\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test | release\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake test\" CONFIG_NAME=\"xmake test\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/release/DelegateTest.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting release\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test | release\" type=\"CLionExternalRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" ELEVATE=\"false\" USE_EXTERNAL_CONSOLE=\"false\" EMULATE_TERMINAL=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Delegate\" TARGET_NAME=\"xmake test\" CONFIG_NAME=\"xmake test\" RUN_PATH=\"$PROJECT_DIR$/build/windows/x64/release/DelegateTest.exe\">\r\n      <method v=\"2\">\r\n        <option name=\"ToolBeforeRunTask\" enabled=\"true\" actionId=\"Tool_xmake clion_xmake setting release\" />\r\n        <option name=\"CLION.EXTERNAL.BUILD\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"benchmark_display\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Delegate\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/benchmark_display.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"benchmark_display\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Delegate\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/benchmark_display.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"benchmark_display\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Delegate\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/benchmark_display.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"gitsubtree_util\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Delegate\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/gitsubtree_util.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"gitsubtree_util\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Delegate\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/gitsubtree_util.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"gitsubtree_util\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Delegate\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/gitsubtree_util.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Custom Build Application.benchmark | debug\" />\r\n      <item itemvalue=\"Custom Build Application.benchmark | release\" />\r\n      <item itemvalue=\"Custom Build Application.test | debug\" />\r\n      <item itemvalue=\"Custom Build Application.test | release\" />\r\n      <item itemvalue=\"Python.gitsubtree_util\" />\r\n      <item itemvalue=\"Python.benchmark_display\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.benchmark_display\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration>C:\\Users\\Estelle\\AppData\\Roaming\\Subversion</configuration>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1c50c572-0cf9-452a-9cdb-7cdf85a1e89f\" name=\"Changes\" comment=\"\" />\r\n      <created>1723781297765</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1723781297765</updated>\r\n      <workItem from=\"1723781300219\" duration=\"11631000\" />\r\n      <workItem from=\"1723800798205\" duration=\"15519000\" />\r\n      <workItem from=\"1724119997819\" duration=\"1015000\" />\r\n      <workItem from=\"1724245059423\" duration=\"93000\" />\r\n      <workItem from=\"1724245377435\" duration=\"28559000\" />\r\n      <workItem from=\"1724374379456\" duration=\"5847000\" />\r\n      <workItem from=\"1724384441668\" duration=\"10397000\" />\r\n      <workItem from=\"1724406136979\" duration=\"8548000\" />\r\n      <workItem from=\"1724466903026\" duration=\"60070000\" />\r\n      <workItem from=\"1724591254407\" duration=\"93000\" />\r\n      <workItem from=\"1724591421524\" duration=\"32000\" />\r\n      <workItem from=\"1724591540284\" duration=\"46000\" />\r\n      <workItem from=\"1724591601390\" duration=\"218000\" />\r\n      <workItem from=\"1724591870895\" duration=\"643000\" />\r\n      <workItem from=\"1724642386385\" duration=\"23042000\" />\r\n      <workItem from=\"1724681304302\" duration=\"21946000\" />\r\n      <workItem from=\"1724749521011\" duration=\"2410000\" />\r\n      <workItem from=\"1724751976799\" duration=\"8171000\" />\r\n      <workItem from=\"1724769312907\" duration=\"3935000\" />\r\n      <workItem from=\"1724830015981\" duration=\"10994000\" />\r\n      <workItem from=\"1724853450665\" duration=\"2210000\" />\r\n      <workItem from=\"1724858932974\" duration=\"662000\" />\r\n      <workItem from=\"1724861182262\" duration=\"4028000\" />\r\n      <workItem from=\"1724893831475\" duration=\"6439000\" />\r\n      <workItem from=\"1724902948922\" duration=\"8174000\" />\r\n      <workItem from=\"1725341653074\" duration=\"1470000\" />\r\n      <workItem from=\"1725350191705\" duration=\"2301000\" />\r\n      <workItem from=\"1725436381834\" duration=\"2031000\" />\r\n      <workItem from=\"1726032292644\" duration=\"1358000\" />\r\n      <workItem from=\"1726058744507\" duration=\"287000\" />\r\n      <workItem from=\"1726059242910\" duration=\"201000\" />\r\n      <workItem from=\"1726130749677\" duration=\"48000\" />\r\n      <workItem from=\"1726406644432\" duration=\"2410000\" />\r\n      <workItem from=\"1726653564988\" duration=\"5172000\" />\r\n      <workItem from=\"1726806397302\" duration=\"17000\" />\r\n      <workItem from=\"1726824236752\" duration=\"1484000\" />\r\n      <workItem from=\"1726883275048\" duration=\"2287000\" />\r\n      <workItem from=\"1726969923795\" duration=\"26000\" />\r\n      <workItem from=\"1726970040109\" duration=\"11000\" />\r\n      <workItem from=\"1726993855125\" duration=\"9000\" />\r\n      <workItem from=\"1727007766815\" duration=\"5504000\" />\r\n      <workItem from=\"1727014088380\" duration=\"1736000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"benchmark\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724245073577</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724245073577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"benchmark &amp; updates\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724293716619</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724293716619</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"init\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724299009302</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724299009302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"file move\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724302674165</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724302674165</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"namespace and formating\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724312897055</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724312897055</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"ignore update\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724404617441</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724404617441</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"benchmarks\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724564538112</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724564538112</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"benchmarks\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724574822320</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724574822320</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"weak multicast benchmarks\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724670411191</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724670411191</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"multicast function\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724896244487</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724896244487</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"benchmark\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724900547941</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724900547941</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"update test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724920820654</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724920820654</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"update ignore\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1724921034804</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1724921034804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"support function rtti\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726660655899</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726660655899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"[fix] support for noexcept static function\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726843249792</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726843249792</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"[refactor] adding anonymous namespace\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726884216738</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726884216738</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"[refactor] namespace\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727009152509</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727009152509</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"[fix] name conflict&#10;[test] adding tag ptr test\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727010176490</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727010176490</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"[features] adding for_each for multicast_function\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727014839494</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727014839494</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"[features] adding for_each for multicast_delegate\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1727015646437</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1727015646437</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"21\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"reference_safe_delegate\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/src/delegate\" />\r\n      <path value=\"$PROJECT_DIR$/temp\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"benchmark &amp; updates\" />\r\n    <MESSAGE value=\"init\" />\r\n    <MESSAGE value=\"file move\" />\r\n    <MESSAGE value=\"namespace and formating\" />\r\n    <MESSAGE value=\"ignore update\" />\r\n    <MESSAGE value=\"benchmarks\" />\r\n    <MESSAGE value=\"weak multicast benchmarks\" />\r\n    <MESSAGE value=\"multicast function\" />\r\n    <MESSAGE value=\"benchmark\" />\r\n    <MESSAGE value=\"update test\" />\r\n    <MESSAGE value=\"update ignore\" />\r\n    <MESSAGE value=\"support function rtti\" />\r\n    <MESSAGE value=\"[fix] support for noexcept static function\" />\r\n    <MESSAGE value=\"[refactor] adding anonymous namespace\" />\r\n    <MESSAGE value=\"[refactor] namespace\" />\r\n    <MESSAGE value=\"[fix] name conflict&#10;[test] adding tag ptr test\" />\r\n    <MESSAGE value=\"[features] adding for_each for multicast_function\" />\r\n    <MESSAGE value=\"[features] adding for_each for multicast_delegate\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"[features] adding for_each for multicast_delegate\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision aca3daab914712628bb76b68f6f09962dd91954d)
+++ b/.idea/workspace.xml	(date 1727079335111)
@@ -12,7 +12,11 @@
     </configurations>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1c50c572-0cf9-452a-9cdb-7cdf85a1e89f" name="Changes" comment="[features] adding for_each for multicast_delegate" />
+    <list default="true" id="1c50c572-0cf9-452a-9cdb-7cdf85a1e89f" name="Changes" comment="[feature] adding sob option for function">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/benchmark_fig.png" beforeDir="false" afterPath="$PROJECT_DIR$/benchmark_fig.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/benchmark/auto_delegate_bench_mark.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/benchmark/auto_delegate_bench_mark.cpp" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -61,6 +65,7 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <branch-grouping />
     <option name="PUSH_TAGS">
       <GitPushTagMode>
         <option name="argument" value="--tags" />
@@ -106,36 +111,36 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;C/C++ File.test.cpp.executor&quot;: &quot;Run&quot;,
-    &quot;Custom Build Application.benchmark | debug.executor&quot;: &quot;Debug&quot;,
-    &quot;Custom Build Application.benchmark | release.executor&quot;: &quot;Run&quot;,
-    &quot;Custom Build Application.test | debug.executor&quot;: &quot;Debug&quot;,
-    &quot;Custom Build Application.test | release.executor&quot;: &quot;Run&quot;,
-    &quot;Custom Build Application.xmake | debug.executor&quot;: &quot;Run&quot;,
-    &quot;Custom Build Application.xmake | release.executor&quot;: &quot;Run&quot;,
-    &quot;Python.benchmark_display.executor&quot;: &quot;Run&quot;,
-    &quot;Python.gitsubtree_util.executor&quot;: &quot;Debug&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
-    &quot;cf.advertisement.text.has.clang-format&quot;: &quot;true&quot;,
-    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
-    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
-    &quot;com.codeium.enabled&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Estelle/source/repos/AutoDelegate&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.general&quot;,
-    &quot;structure.view.defaults.are.configured&quot;: &quot;true&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "C/C++ File.test.cpp.executor": "Run",
+    "Custom Build Application.benchmark | debug.executor": "Debug",
+    "Custom Build Application.benchmark | release.executor": "Debug",
+    "Custom Build Application.test | debug.executor": "Debug",
+    "Custom Build Application.test | release.executor": "Debug",
+    "Custom Build Application.xmake | debug.executor": "Run",
+    "Custom Build Application.xmake | release.executor": "Run",
+    "Python.benchmark_display.executor": "Run",
+    "Python.gitsubtree_util.executor": "Debug",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.cidr.known.project.marker": "true",
+    "RunOnceActivity.readMode.enableVisualFormatting": "true",
+    "cf.advertisement.text.has.clang-format": "true",
+    "cf.first.check.clang-format": "false",
+    "cidr.known.project.marker": "true",
+    "com.codeium.enabled": "true",
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "C:/Users/Estelle/source/repos/AutoDelegate",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
+    "structure.view.defaults.are.configured": "true",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\Estelle\source\repos\AutoDelegate" />
@@ -148,7 +153,12 @@
       <recent name="C:\Users\Estelle\source\repos\Delegate\src\delegate" />
     </key>
   </component>
-  <component name="RunManager" selected="Custom Build Application.test | debug">
+  <component name="RunManager" selected="Custom Build Application.test | release">
+    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
+      <method v="2">
+        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="benchmark | debug" type="CLionExternalRunConfiguration" factoryName="Application" PROGRAM_PARAMS="--benchmark_repetitions=10" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="AutoDelegate" TARGET_NAME="xmake" CONFIG_NAME="xmake" RUN_PATH="$PROJECT_DIR$/build/windows/x64/debug/DelegateBenchmark.exe">
       <envs>
         <env name="CONSOLE_WIDTH" value=" 200" />
@@ -429,6 +439,7 @@
       <workItem from="1726993855125" duration="9000" />
       <workItem from="1727007766815" duration="5504000" />
       <workItem from="1727014088380" duration="1736000" />
+      <workItem from="1727058584398" duration="11116000" />
     </task>
     <task id="LOCAL-00001" summary="benchmark">
       <option name="closed" value="true" />
@@ -590,7 +601,23 @@
       <option name="project" value="LOCAL" />
       <updated>1727015646437</updated>
     </task>
-    <option name="localTasksCounter" value="21" />
+    <task id="LOCAL-00021" summary="[fix] remove redundant include">
+      <option name="closed" value="true" />
+      <created>1727066595816</created>
+      <option name="number" value="00021" />
+      <option name="presentableId" value="LOCAL-00021" />
+      <option name="project" value="LOCAL" />
+      <updated>1727066595816</updated>
+    </task>
+    <task id="LOCAL-00022" summary="[feature] adding sob option for function">
+      <option name="closed" value="true" />
+      <created>1727076152140</created>
+      <option name="number" value="00022" />
+      <option name="presentableId" value="LOCAL-00022" />
+      <option name="project" value="LOCAL" />
+      <updated>1727076152140</updated>
+    </task>
+    <option name="localTasksCounter" value="23" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -651,7 +678,9 @@
     <MESSAGE value="[fix] name conflict&#10;[test] adding tag ptr test" />
     <MESSAGE value="[features] adding for_each for multicast_function" />
     <MESSAGE value="[features] adding for_each for multicast_delegate" />
-    <option name="LAST_COMMIT_MESSAGE" value="[features] adding for_each for multicast_delegate" />
+    <MESSAGE value="[fix] remove redundant include" />
+    <MESSAGE value="[feature] adding sob option for function" />
+    <option name="LAST_COMMIT_MESSAGE" value="[feature] adding sob option for function" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
